name: Build

on:
  workflow_dispatch:
    inputs:
      skip-duplicates:
          description: 'Whether to fail or skip duplicates when uploading to a package repository'
          required: false
          default: 'true'
  push:
    branches: [ beta, master, release-*, push ]
  pull_request:
    branches: [ master, release-* ]

jobs:
  build:
    env:    
      GIT_REF: ${{ github.ref }}
      Solution: src/GeneXus.DeploymentTargets.sln
      Configuration: Release

    runs-on: [windows-latest]

    outputs:
      NUGET_VERSION: ${{ steps.buildVariables.outputs.NUGET_PACKAGE_VERSION }}
      LAST_COMMITTER: ${{ steps.buildVariables.outputs.LAST_COMMITTER }}
      COMMIT_MESSAGE: ${{ steps.buildVariables.outputs.COMMIT_MESSAGE }}
      SHOULD_DEPLOY: ${{ steps.buildVariables.outputs.SHOULD_DEPLOY }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Calculate environment variables
      run: |     
        $IsPrerelease = !($Env:GIT_REF -match 'release-[0-9]+(?:\.[0-9]+)?$')
        echo "IsPrerelease=$IsPrerelease" >> $env:GITHUB_ENV
        $COMMIT_NUMBER = @($(git rev-list --count origin/master..), $(git rev-list --count HEAD))[$IsPrerelease]
        echo "COMMIT_NUMBER=$COMMIT_NUMBER" >> $env:GITHUB_ENV

    - name: Calculate package version
      env:
        PackageVersionString: ./.github/generatePackageVersion.ps1
      run: |
        $NuGetPackageVersion = & "$Env:PackageVersionString"
        Write-Output "Package version to be used: $NuGetPackageVersion"
        echo "NuGetPackageVersion=$NuGetPackageVersion" >> $env:GITHUB_ENV

    - name: Generate package
      env:
        CommitNumber: ${{env.COMMIT_NUMBER}}
      run: dotnet pack $Env:Solution --configuration $Env:Configuration /p:Version=$Env:NuGetPackageVersion

    - name: Checkout GeneXusLabs dispatch action
      uses: actions/checkout@v2
      if: ${{ github.repository_owner == 'GeneXusLabs' && env.IsPrerelease == 'False' && github.base_ref == '' }}
      with:
          repository: genexuslabs/dispatch-build-result
          ref: releases/v2
          token: ${{ secrets.PAT }}
          path: .github/actions/dispatch-build-result

    - name: Prepare build result
      if: ${{ github.repository_owner == 'GeneXusLabs' && env.IsPrerelease == 'False' && github.base_ref == '' }}
      run: |
        Import-Module ./.github/actions/dispatch-build-result/utils/CSProjUtils -Force
        $packageNames = Gather-Nupkg-Names (Get-Location).Path
        if ([string]::IsNullOrEmpty($packageNames)) {
          write-error "Cannot found package to integrate"
        }
        echo "DispatchPackageNames=$packageNames" >> $env:GITHUB_ENV

    - name: Dispatch build result
      uses: ./.github/actions/dispatch-build-result
      if: ${{ github.repository_owner == 'GeneXusLabs' && env.IsPrerelease == 'False' && github.base_ref == '' }}
      with:
        new-version: ${{ env.NuGetPackageVersion }}
        token: ${{ secrets.PAT }}
        committer: ${{ github.actor }}
        package-names: ${{ env.DispatchPackageNames }}

    - name: Push packages
      if: github.repository_owner == 'GeneXusLabs' && steps.buildVariables.outputs.SHOULD_DEPLOY == 'true'
      env:
        GPRFeedURL: https://nuget.pkg.github.com/genexuslabs/index.json
        NuGetFeedURL: https://api.nuget.org/v3/index.json
      run: |
        $IsPrerelease = [System.Convert]::ToBoolean($Env:IsPrerelease)
        $totalPackages  = 0
        $pushedToAzure  = 0
        $pushedToGitHub = 0
        $pushedToNuget  = 0
        Get-ChildItem ".\dotnet\*.nupkg" -Recurse | ForEach-Object {
          $PushToGitHubArgs = @("nuget", "push", $_.FullName, "--source", $Env:GPRFeedURL, "--api-key", "${{ secrets.SECURE_TOKEN }}")
          $PushToNugetArgs  = @("nuget", "push", $_.FullName, "--source", $Env:NuGetFeedURL, "--api-key", "${{ secrets.NUGET_ORG_TOKEN }}")
          $PushToAzureArgs  = @("nuget", "push", $_.FullName, "--source", $Env:AZURE_ARTIFACTS_URL, "--api-key", "DUMMY-KEY")
          if ([string]::IsNullOrEmpty("${{ github.event.inputs.skip-duplicates }}") ) {
            $skipDuplicates = $true
          } else {
            $skipDuplicates = [System.Convert]::ToBoolean("${{ github.event.inputs.skip-duplicates }}")
          }
          
          if ($skipDuplicates) {
            $PushToNugetArgs  += "--skip-duplicate"
            $PushToGitHubArgs += "--skip-duplicate"
            $PushToAzureArgs  += "--skip-duplicate"
          }
                    
          dotnet $PushToAzureArgs
          $pushedToAzure += 1
          if (!$IsPrerelease) {
            dotnet $PushToGitHubArgs
            $pushedToGitHub += 1
            dotnet $PushToNugetArgs
            $pushedToNuget += 1
          }
          $totalPackages += 1
        }
        Write-Output "Number of packages found: $totalPackages"
        Write-Output "Number of packages pushed to Azure Artifacts: $pushedToAzure"
        Write-Output "Number of packages pushed to GitHub: $pushedToGitHub"
        Write-Output "Number of packages pushed to Nuget.org: $pushedToNuget"

  dispatch-build:
    name: Dispatch build result
    needs: build
    if: github.repository_owner == 'GeneXusLabs' && needs.build.outputs.SHOULD_DEPLOY == 'true'
    
    runs-on: ubuntu-latest

    concurrency: 
      group: build-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout action
        uses: actions/checkout@v3
        with:
            repository: genexuslabs/dispatch-build-result
            ref: releases/v2
            token: ${{ secrets.SECURE_TOKEN }}
            path: ./tmp/.github/actions/dispatch-build-result

      - name: Dispatch build result
        uses: ./tmp/.github/actions/dispatch-build-result
        with:
          component-name: ${{ github.event.inputs.repository }}
          branch-ref: ${{ env.GIT_REF }}
          new-version: ${{ needs.build.outputs.NUGET_VERSION }}
          committer: ${{ needs.build.outputs.LAST_COMMITTER }}
          commit-message: ${{ needs.build.outputs.COMMIT_MESSAGE }}
          token: ${{ secrets.SECURE_TOKEN }}