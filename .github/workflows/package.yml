name: Build

on:
  push:
    branches: [ master ]
    paths: 
      - .github/workflows/package.yml
      - src/
      - GeneXus.DeploymentTargets.nuspec

jobs:
  build:
    env:
      NuGetRepository: http://nexus.genexus.com/repository/nuget-hosted/
      Nuspec: GeneXus.DeploymentTargets.nuspec

    runs-on: armado-virtual

    steps:

    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Setup NuGet.exe
      uses: nuget/setup-nuget@v1

    - name: Build NuGet package
      run: nuget pack $Env:Nuspec 

    - name: Push to Nuget Repository
      run: | 
        
        $nupkg = (Get-ChildItem *.nupkg).Name
      
        dotnet nuget push $nupkg --source $Env:NuGetRepository

    - name: Checkout private action
      uses: actions/checkout@v2
      with:
          repository: genexuslabs/dispatch-build-result
          ref: releases/v2
          token: ${{ secrets.PAT }}
          path: .github/actions/dispatch-build-result
          
    - name: Prepare build result
      if: github.repository_owner == 'GeneXusLabs'
      run: |
        
        $xpath = "/package/metadata/version"	
        $xml = Select-Xml $Env:Nuspec -XPath $xpath	
        $packageVersion = $xml.Node.'#text'	
        echo "::set-env name=NuGetPackageVersion::$packageVersion"

        Import-Module ./.github/actions/dispatch-build-result/utils/CSProjUtils -Force
        $packageNames = Gather-Nupkg-Names $Env:GITHUB_WORKSPACE $false
        echo "::set-env name=DispatchPackageNames::$packageNames"

    - name: Dispatch build result
      uses: ./.github/actions/dispatch-build-result
      with:
        new-version: ${{ env.NuGetPackageVersion }}
        token: ${{ secrets.PAT }}
        committer: ${{ github.actor }}
        package-names: ${{ env.DispatchPackageNames }}
